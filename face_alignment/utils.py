"""Face alignment utils."""

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import matplotlib.pyplot as plt
import numpy as np
import menpo
import tensorflow as tf


REFERENCE_SHAPE = np.array(
  [
    [ 73.09741747,  41.97265311],
    [ 92.32815968,  42.52123696],
    [111.51403589,  44.88326231],
    [130.14206578,  49.08305398],
    [147.3267701 ,  56.63729775],
    [162.26541642,  68.14698187],
    [174.69162393,  82.12658084],
    [184.47892081,  97.59829872],
    [186.97655404, 114.95525553],
    [183.59493578, 131.97434174],
    [173.37990979, 146.93816365],
    [160.76815498, 160.53012021],
    [145.67998402, 171.54439035],
    [128.17092254, 178.70096839],
    [109.34685433, 182.34764158],
    [ 90.25838341, 184.06500687],
    [ 71.03998318, 184.3920242 ],
    [ 58.69607709,  54.42364322],
    [ 50.29703032,  63.37605758],
    [ 47.8785943 ,  75.99121882],
    [ 49.74673117,  89.06837929],
    [ 54.87415047, 100.93266075],
    [ 53.87677791, 123.3257525 ],
    [ 48.51422094, 135.78144869],
    [ 46.56030591, 148.76894011],
    [ 48.98198864, 161.35415385],
    [ 57.02041155, 170.13270378],
    [ 69.34623309, 112.74411442],
    [ 81.74783217, 112.89567816],
    [ 94.04903768, 113.08528663],
    [106.71703653, 113.33586406],
    [115.32911725,  98.41397488],
    [117.97296175, 105.71490331],
    [120.11106128, 113.30950526],
    [117.75130994, 120.90226869],
    [115.19103852, 127.6815167 ],
    [ 71.46205305,  69.03109519],
    [ 66.78332951,  76.83237067],
    [ 66.95205947,  86.1575748 ],
    [ 73.05964354,  94.16047575],
    [ 74.76328299,  85.8707979 ],
    [ 74.83568022,  76.53671958],
    [ 72.46304003, 130.80771207],
    [ 65.9183078 , 139.11136117],
    [ 65.83687026, 148.3374226 ],
    [ 70.26251433, 155.96340264],
    [ 73.63075063, 149.12845938],
    [ 73.97737924, 139.98522603],
    [138.73845632,  85.91325039],
    [134.26634261,  96.26944978],
    [132.06788518, 106.49289229],
    [133.83775878, 113.20672106],
    [131.94324767, 120.82017341],
    [134.08231069, 131.2463118 ],
    [137.79722359, 141.29555258],
    [147.99531784, 131.71323169],
    [152.56804597, 121.79472389],
    [153.54224959, 113.64555819],
    [152.87103042, 106.2070919 ],
    [148.66135267,  96.09985025],
    [139.17716694,  90.14888309],
    [138.26232703, 106.47539717],
    [138.9201452 , 113.31938246],
    [138.01432593, 121.00729446],
    [138.45087416, 137.06348029],
    [143.24441022, 121.189212  ],
    [144.30066033, 113.37828025],
    [143.56445265, 106.37596244]
  ]
)

jaw_indices = np.arange(0, 17)
lbrow_indices = np.arange(17, 22)
rbrow_indices = np.arange(22, 27)
upper_nose_indices = np.arange(27, 31)
lower_nose_indices = np.arange(31, 36)
leye_indices = np.arange(36, 42)
reye_indices = np.arange(42, 48)
outer_mouth_indices = np.arange(48, 60)
inner_mouth_indices = np.arange(60, 68)

parts_68 = (
  jaw_indices,
  lbrow_indices,
  rbrow_indices,
  upper_nose_indices,
  lower_nose_indices,
  leye_indices,
  reye_indices,
  outer_mouth_indices,
  inner_mouth_indices
)


def line(image, x0, y0, x1, y1, color):
  if abs(x0 - x1) < abs(y0 - y1):
      x0, y0 = y0, x0
      x1, y1 = y1, x1
      steep = True

  if x0 > x1:
      x0, x1 = x1, x0
      y0, y1 = y1, y0

  for x in range(int(x0), int(x1) + 1):
      t = (x - x0) / float(x1 - x0)
      y = y0 * (1 - t) + y1 * t
      image[int(y), x] = color


def link_landmarks(image, landmarks, color=1):
  assert len(landmarks.shape) == 2
  assert landmarks.shape[0] == 68
  
  try:
    image = image.copy()

    for i, part in enumerate(parts_68[0:]):
      circular = []

      if i in (4, 5, 6, 7):
        circular = [part[0]]

      for p1, p2 in zip(part, list(part[1:]) + circular):
        p1, p2 = landmarks[p1], landmarks[p2]
        line(image, p2[1], p2[0], p1[1], p1[0], color)
  except:
    pass

  return image
